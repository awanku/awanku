name: core-api-deployment

on:
  deployment:
    paths:
      - 'backend/**'
      - '.github/vpn.ovpn'
      - '.nomad/awanku-stack-core-api.hcl'

jobs:
  push_docker_image:
    runs-on: ubuntu-18.04
    if: github.event.deployment.payload.app == 'core-api'
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14.x

      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Build API docker image and push
        uses: docker/build-push-action@v1
        with:
          path: ./backend
          dockerfile: ./backend/docker/Production.dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.awanku.id
          repository: awanku/core-api
          tags: ${{ github.sha }}

      - name: Build API docs
        working-directory: ./backend
        run: |
          go get -v -t -d ./...
          make swagger-generate

      - name: Build API docs docker image and push
        uses: docker/build-push-action@v1
        with:
          path: ./backend
          dockerfile: ./backend/docker/ApiDocs.dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.awanku.id
          repository: awanku/core-api-docs
          tags: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-18.04
    needs: [push_docker_image]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Install packages
        run: sudo apt-get install -y --no-install-recommends openvpn unzip curl openvpn-systemd-resolved

      - name: Connect VPN
        run: |
          echo "${SECRET}" > secret.txt
          sudo openvpn --verb 6 --config .github/vpn.ovpn --askpass secret.txt --daemon --log openvpn.log
        env:
          SECRET: ${{ secrets.OPENVPN_SECRET }}

      - name: Wait until VPN is up
        run: |
          attempt=1
          until $( curl --output /dev/null --silent --head --fail --max-time 3 nomad.service.consul:4646 )
          do
            attempt=$((attempt + 1))
            if [[ "${attempt}" == "10" ]]; then
              sudo cat openvpn.log
              exit 1
            fi

            echo 'not connected, retrying...'
            sleep 5
          done
          echo 'connected to VPN!'

      - name: Install Nomad binary
        run: |
          curl -sL -o nomad.zip https://releases.hashicorp.com/nomad/0.11.3/nomad_0.11.3_linux_amd64.zip
          sudo unzip nomad.zip -d /usr/bin/
          sudo chmod +x /usr/bin/nomad

      - name: 'Deployment pending'
        uses: 'deliverybot/deployment-status@master'
        with:
          state: 'pending'
          token: '${{ github.token }}'

      - name: Submit Nomad job
        env:
          NOMAD_ADDR: https://nomad.internal.awanku.id
        run: |
          sed -i 's/core-api:latest/core-api:${{ github.sha }}/' .nomad/awanku-stack-core-api.hcl
          sed -i 's/core-api-docs:latest/core-api-docs:${{ github.sha }}/' .nomad/awanku-stack-core-api.hcl
          /usr/bin/nomad run .nomad/awanku-stack-core-api.hcl

      - name: 'Deployment success'
        if: success()
        uses: 'deliverybot/deployment-status@master'
        with:
          state: 'success'
          token: '${{ github.token }}'

      - name: 'Deployment failure'
        if: failure()
        uses: 'deliverybot/deployment-status@master'
        with:
          state: 'failure'
          token: '${{ github.token }}'

      - name: Kill VPN
        if: always()
        run: sudo kill -9 $(pidof openvpn) || true
