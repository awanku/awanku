name: Backend

on:
  push:
    branches: [ master ]
  pull_request: {}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14.4
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Build
      working-directory: ./backend
      run: |
        go get -v -t -d ./...
        make test

  build-docker:
    name: Build docker image and push to registry
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build docker image and push
        uses: docker/build-push-action@v1
        with:
          path: ./backend
          dockerfile: ./backend/docker/Production.dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.awanku.id
          repository: awanku/core-api
          tags: latest

  deploy:
    name: Deploy
    needs: [test, build-docker]
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: sudo apt-get install -y --no-install-recommends openvpn gzip
      - name: Connect VPN
        run: |
          echo "${SECRET}" > secret.txt
          chmod 600 secret.txt
          sudo openvpn --config .github/vpn.ovpn --askpass secret.txt --daemon
          until $(curl --output /dev/null --silent --head --fail --max-time 3 nomad.service.consul:4646) ; do ; echo 'not connected, retrying' ; sleep 3 ; done
          echo 'Connected to nomad cluster!'
        env:
          SECRET: ${{ secrets.VPN_SECRET }}
      - name: Install Nomad binary
        run: |
          curl -sL https://releases.hashicorp.com/nomad/0.11.3/nomad_0.11.3_linux_amd64.zip | gunzip -c - > /usr/bin/nomad
          chmod +x /usr/bin/nomad
      - name: Submit Nomad job
        run: nomad run awanku-systems.hcl
        env:
          NOMAD_ADDR: http://nomad.service.consul:4646
      - name: Kill vpn
        if: always()
        run: sudo killall openvpn
